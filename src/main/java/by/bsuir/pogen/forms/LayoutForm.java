package by.bsuir.pogen.forms;

import by.bsuir.pogen.models.WebElement;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import io.appium.java_client.android.AndroidDriver;
import org.openqa.selenium.OutputType;

import javax.imageio.ImageIO;
import javax.swing.*;
import java.awt.*;
import java.awt.image.BufferedImage;
import java.io.IOException;

/**
 * Created by Alexei Khilchuk on 05.08.2018.
 */
public class LayoutForm extends JFrame {
    private final AndroidDriver androidDriver;
    public JPanel pnlLayout;
    private JPanel frmLayout;
    private JLabel lblImg;

    public LayoutForm(AndroidDriver androidDriver, WebElement element) throws HeadlessException {
        super("Layout");
        this.androidDriver = androidDriver;

        BufferedImage img = null;
        try {
            img = ImageIO.read(androidDriver.getScreenshotAs(OutputType.FILE));
            Graphics2D graphics2D = img.createGraphics();
            graphics2D.setColor(Color.RED);
            graphics2D.setStroke(new BasicStroke(5));

            if (element.getElement().hasAttr("bounds")) {
                String[] dimensions = element.getElement().attr("bounds")
                        .replace("]", ",")
                        .replace("[", "")
                        .split(",");
                int x1 = Integer.valueOf(dimensions[0]);
                int y1 = Integer.valueOf(dimensions[1]);
                int x2 = Integer.valueOf(dimensions[2]);
                int y2 = Integer.valueOf(dimensions[3]);
                graphics2D.drawRect(x1, y1, x2 - x1, y2 - y1);

            }
            graphics2D.dispose();
        } catch (IOException e) {
            e.printStackTrace();
        }
        ImageIcon icon = new ImageIcon(scaleImage(img, 480, 720, Color.WHITE));
        lblImg.setIcon(icon);
    }

    private BufferedImage scaleImage(BufferedImage img, int width, int height,
                                     Color background) {
        int imgWidth = img.getWidth();
        int imgHeight = img.getHeight();
        if (imgWidth * height < imgHeight * width) {
            width = imgWidth * height / imgHeight;
        } else {
            height = imgHeight * width / imgWidth;
        }
        BufferedImage newImage = new BufferedImage(width, height,
                BufferedImage.TYPE_INT_RGB);
        Graphics2D g = newImage.createGraphics();
        try {
            g.setRenderingHint(RenderingHints.KEY_INTERPOLATION,
                    RenderingHints.VALUE_INTERPOLATION_BICUBIC);
            g.setBackground(background);
            g.clearRect(0, 0, width, height);
            g.drawImage(img, 0, 0, width, height, null);
        } finally {
            g.dispose();
        }
        return newImage;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        frmLayout = new JPanel();
        frmLayout.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        pnlLayout = new JPanel();
        pnlLayout.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        frmLayout.add(pnlLayout, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        lblImg = new JLabel();
        lblImg.setText("");
        pnlLayout.add(lblImg, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return frmLayout;
    }
}
